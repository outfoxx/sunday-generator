#%RAML 1.0
title: Secure Messaging
uses:
  sunday: https://outfoxx.github.io/sunday-generator/sunday.raml
version: 1
documentation:
  - title: Secure Messaging
    content: Secure instant messaging
protocols: [ HTTPS ]
baseUri: https://master.{environment}.com/api/v{version}
baseUriParameters:
  environment:
    description: Target platform environment (Production or Staging)
    enum: [ prd, stg ]
securitySchemes:
  bearer:
    description: |
      Authentication via JWT token passed in the "Authorization" header
    type: Pass Through
    describedBy:
      headers:
        Authorization:
          description: |
            JWT token generated from the "grant/refresh" endpoint
          type: string
securedBy: [ bearer ]
mediaType:
  [ application/json, application/cbor, application/yaml ]

types:
  uuid:
    type: string

  url:
    type: string

  uri:
    type: string

  binary:
    type: file

  stream:
    type: binary

  certificate:
    type: binary

  SystemRole:
    type: string
    enum:
      - Admin
      - Tenant
      - Account
      - Device

  SystemPermission:
    type: string
    enum:
      - Read
      - ReadWrite

  PushServiceType:
    type: string
    enum:
      - Direct
      - ADM
      - APNS
      - GCM
      - SNS

  PushServicePriority:
    type: string
    enum:
      - Normal
      - Interactive

  Device:
    type: object
    properties:
      id:
        required: true
        type: uuid
      accountId:
        required: true
        type: uuid
      aliases:
        required: true
        type: array
        uniqueItems: true
        items:
          type: string
      name:
        required: true
        type: string
      encryptionCertificate:
        required: false
        type: certificate
      signatureCertificate:
        required: false
        type: certificate
      securityFingerprint:
        required: false
        type: binary
      lastConnect:
        required: false
        type: datetime
      lastPush:
        required: false
        type: datetime
      lastOutOfTouch:
        required: false
        type: datetime
      data:
        required: false
        type: any

  DeviceCreateParams:
    type: object
    properties:
      id:
        required: true
        type: uuid
      name:
        required: true
        type: string
      encryptionCertificate:
        required: true
        type: certificate
      signatureCertificate:
        required: true
        type: certificate
      data:
        required: false
        type: any

  AddActiveAliasParams:
    type: object
    properties:
      alias:
        required: true
        type: string

  DevicePushService:
    type: object
    properties:
      deviceId:
        required: true
        type: uuid
      priority:
        required: false
        type: PushServicePriority
      type:
        required: true
        type: PushServiceType
      token:
        required: true
        type: string
      parameters:
        required: true
        type: DevicePushService-Parameters
      lastUpdate:
        required: false
        type: datetime

  DevicePushService-Parameters:
    type: object
    discriminator: type
    properties:
      type:
        required: true
        type: PushServiceType

  DevicePushService-APNSParameters:
    type: DevicePushService-Parameters
    discriminatorValue: APNS
    properties:
      topic:
        required: true
        type: string

  UpdateActivePushServiceParams:
    type: object
    discriminator: type
    properties:
      type:
        required: true
        type: PushServiceType
      version:
        required: false
        type: integer
        format: int32
      token:
        required: true
        type: string

  UpdateActivePushServiceParams-ADM:
    type: UpdateActivePushServiceParams
    discriminatorValue: ADM
    properties:

  UpdateActivePushServiceParams-APNS:
    type: UpdateActivePushServiceParams
    discriminatorValue: APNS
    properties:
      topic:
        required: true
        type: string

  UpdateActivePushServiceParams-GCM:
    type: UpdateActivePushServiceParams
    discriminatorValue: GCM
    properties:

  UpdateActivePushServiceParams-SNS:
    type: UpdateActivePushServiceParams
    discriminatorValue: SNS
    properties:

  UpdateDeviceCertificatesParams:
    type: object
    properties:
      encryptionCertificate:
        required: true
        type: certificate
      signatureCertificate:
        required: true
        type: certificate

  MessageBatch:
    type: object
    properties:
      id:
        required: true
        type: uuid
      senderAlias:
        required: true
        type: string
      envelopes:
        required: true
        type: array
        items:
          type: MessageBatch-Envelope
      threadId:
        required: false
        type: uuid
      payloads:
        required: true
        type: array
        items:
          type: MessageBatch-Payload
      metaData:
        required: false
        type: object
        properties:
          //: any

  MessageBatch-Envelope:
    type: object
    properties:
      recipientAlias:
        required: true
        type: string
      recipientDeviceId:
        required: true
        type: uuid
      encryption:
        required: false
        type: MessageBatch-Envelope-Encryption

  MessageBatch-Envelope-Encryption:
    type: object
    properties:
      type:
        required: true
        type: integer
        format: int16
      key:
        required: true
        type: binary
      signature:
        required: true
        type: binary
      securityFingerprint:
        required: true
        type: binary

  MessageBatch-Payload:
    type: object
    properties:
      id:
        required: true
        type: string
      data:
        required: false
        type: binary
      ref:
        required: false
        type: MessageBatch-Payload-Ref

  MessageBatch-Payload-Ref:
    type: object
    properties:
      location:
        required: true
        type: uri
      size:
        required: true
        type: integer
        format: int64

  MessagePriority:
    type: string
    enum:
      - Normal
      - Interactive

  MessageSendParams:
    type: object
    properties:
      batch:
        required: true
        type: MessageBatch
      istransient:
        required: false
        type: boolean
      priority:
        required: false
        type: MessagePriority

  MessageSendResult:
    type: object
    properties:
      sent:
        required: true
        type: datetime

  MessageSummary:
    type: object
    properties:
      id:
        required: true
        type: uuid
      recipientAliases:
        required: true
        type: array
        uniqueItems: true
        items:
          type: string
      senderAlias:
        required: true
        type: string
      threadId:
        required: false
        type: uuid
      encryption:
        required: false
        type: MessageSummary-Encryption
      metaData:
        required: true
        type: object
        properties:
          //: any
      sent:
        required: true
        type: datetime
      payloads:
        required: true
        type: object
        properties:
          //: (MessageSummary-InlinePayload | MessageSummary-FetchPayload | MessageSummary-SourcePayload)

  MessageSummary-Encryption:
    type: object
    properties:
      type:
        required: true
        type: integer
        format: int16
      key:
        required: true
        type: binary
      signature:
        required: true
        type: binary

  MessageSummary-PayloadType:
    type: string
    enum:
      - Inline
      - Fetch
      - Source

  MessageSummary-Payload:
    type: object
    discriminator: type
    properties:
      type:
        required: true
        type: MessageSummary-PayloadType

  MessageSummary-InlinePayload:
    type: MessageSummary-Payload
    discriminatorValue: Inline
    properties:
      data:
        required: true
        type: binary

  MessageSummary-FetchPayload:
    type: MessageSummary-Payload
    discriminatorValue: Fetch
    properties:
      size:
        required: true
        type: integer
        format: int64

  MessageSummary-SourcePayload:
    type: MessageSummary-Payload
    discriminatorValue: Source
    properties:
      location:
        required: true
        type: url

  Account:
    type: object
    properties:
      id:
        required: true
        type: uuid
      tenantId:
        required: true
        type: uuid
      aliases:
        required: true
        type: array
        uniqueItems: true
        items:
          type: string
      authorityCert:
        required: false
        type: binary
      hash:
        required: true
        type: binary
      inception:
        required: true
        type: datetime
      data:
        required: false
        type: any

  AccountCreateParams:
    type: object
    properties:
      id:
        required: true
        type: uuid
      authorityCertReq:
        required: true
        type: binary
      data:
        required: false
        type: any

  AddAliasParams:
    type: object
    properties:
      alias:
        required: true
        type: string

  Tenant:
    type: object
    properties:
      id:
        required: true
        type: uuid
      name:
        required: true
        type: string
      inception:
        required: true
        type: datetime
      data:
        required: false
        type: any

  TenantCreateParams:
    type: object
    properties:
      requestedId:
        required: false
        type: uuid
      name:
        required: true
        type: string
      data:
        required: false
        type: any

  TenantPushService:
    type: object
    properties:
      tenantId:
        required: true
        type: uuid
      type:
        required: true
        type: PushServiceType
      credentials:
        required: true
        type: any
      payloadFilter:
        required: false
        type: string
      endpoint:
        required: false
        type: url

  TenantPushService-APNSCredentials:
    type: object
    properties:
      environment:
        required: true
        type: APNSEnvironment
      teamId:
        required: true
        type: string
      authKeyId:
        required: true
        type: string
      authKey:
        required: true
        type: binary
      topics:
        required: true
        type: array
        uniqueItems: true
        items: string
      template:
        required:  true
        type: object

  TenantPushService-GCMCredentials:
    type: object
    properties:
      secretKey:
        required: true
        type: string

  TenantPushService-SNSCredentials:
    type: object
    properties:
      accessKeyId:
        required: true
        type: string
      secretAccessKey:
        required: true
        type: string
      topicARN:
        required: true
        type: string

  TenantPushServiceParams:
    type: object
    discriminator: type
    properties:
      type:
        required: true
        type: PushServiceType
      payloadFilter:
        required: false
        type: string

  TenantPushServiceParams-ADM:
    type: TenantPushServiceParams
    discriminatorValue: ADM
    properties:
      secretKey:
        required: true
        type: string

  TenantPushServiceParams-APNS:
    type: TenantPushServiceParams
    discriminatorValue: APNS
    properties:
      environment:
        required: true
        type: APNSEnvironment
      credentials:
        required: true
        type: TenantPushServiceParams-APNS-Credentials
      apsTemplate:
        required: false
        type: TenantPushServiceParams-APNS-APSTemplate

  TenantPushServiceParams-APNS-Credentials:
    type: object
    properties:
      teamId:
        required: true
        type: string
      authKeyId:
        required: true
        type: string
      authKey:
        required: true
        type: string
      topics:
        required: true
        type: array
        uniqueItems: true
        items:
          type: string

  APNSEnvironment:
    type: string
    enum:
      - Production
      - Development
      - Simulation

  TenantPushServiceParams-APNS-APSTemplate:
    type: object
    properties:
      alert:
        required: false
        type: (string | TenantPushServiceParams-APNS-APSTemplate-Alert)
      badge:
        required: false
        type: integer
        format: int32
      sound:
        required: false
        type: string
      content-available:
        required: false
        type: integer
        format: int32
      category:
        required: false
        type: string
      thread-id:
        required: false
        type: string

  TenantPushServiceParams-APNS-APSTemplate-Alert:
    type: object
    properties:
      title:
        required: false
        type: string
      body:
        required: false
        type: string
      title-loc-key:
        required: false
        type: string
      title-loc-args:
        required: false
        type: array
        items:
          type: string
      action-loc-key:
        required: false
        type: string
      loc-key:
        required: false
        type: string
      loc-args:
        required: false
        type: array
        items:
          type: string
      launch-image:
        required: false
        type: string

  TenantPushServiceParams-GCM:
    type: TenantPushServiceParams
    discriminatorValue: GCM
    properties:
      secretKey:
        required: true
        type: string

  TenantPushServiceParams-SNS:
    type: TenantPushServiceParams
    discriminatorValue: SNS
    properties:
      accessKeyId:
        required: true
        type: string
      secretAccessKey:
        required: true
        type: string
      topic:
        required: true
        type: string

  TenantPushServiceParams-Direct:
    type: TenantPushServiceParams
    discriminatorValue: Direct

  SystemUser:
    type: object
    properties:
      id:
        required: true
        type: uuid
      tenantId:
        required: true
        type: uuid
      username:
        required: true
        type: string
      permissions:
        required: true
        type: object
        properties:
          //: SystemPermission
      inception:
        required: true
        type: datetime
      roles:
        required: true
        type: array
        uniqueItems: true
        items:
          type: SystemRole
      data:
        required: false
        type: any

  SystemUserCreateParams:
    type: object
    properties:
      requestedId:
        required: false
        type: uuid
      username:
        required: true
        type: string
      password:
        required: true
        type: string
      permissions:
        required: false
        type: object
        properties:
          //: SystemPermission
      data:
        required: false
        type: any

  AuthKey:
    type: object
    properties:
      id:
        required: true
        type: string
      tenantId:
        required: true
        type: uuid
      description:
        required: false
        type: string
      type:
        required: true
        type: string
      data:
        required: true
        type: binary
      lastUsed:
        required: false
        type: datetime
      inception:
        required: true
        type: datetime
      active:
        required: true
        type: boolean

  AuthKeyCreateParams:
    type: object
    properties:
      id:
        required: true
        type: string
        pattern: "[a-zA-Z0-9_]{4,32}"
      description:
        required: false
        type: string
      key:
        required: false
        type: AuthKeyCreateParams-Key
      kind:
        required: false
        type: AuthKeyCreateParams-Kind

  AuthKeyCreateParams-Kind:
    type: string
    enum:
      - Encryption
      - DigitalSignature

  AuthKeyCreateParams-Key:
    type: object
    properties:
      type:
        required: true
        type: AuthKeyCreateParams-Key-Type
      data:
        required: true
        type: binary

  AuthKeyCreateParams-Key-Type:
    type: string
    enum:
      - HS256
      - HS384
      - HS512
      - RS256
      - RS384
      - RS512
      - AES128_HS256
      - AES192_HS384
      - AES256_HS512
      - AES128GCM
      - AES192GCM
      - AES256GCM

  PasswordParams:
    type: object
    properties:
      username:
        required: true
        type: string
      password:
        required: true
        type: string
      requestedValidityDuration:
        required: false
        type: number
        format: double

  RefreshParams:
    type: object
    properties:
      refreshToken:
        required: true
        type: string

  DelegateParams:
    type: object
    properties:
      keyId:
        required: false
        type: string
      tenantId:
        required: false
        type: uuid
      accountId:
        required: false
        type: uuid
      deviceId:
        required: false
        type: uuid
      validityDuration:
        required: false
        type: number
        format: double

  GrantResponse:
    type: object
    properties:
      token:
        required: true
        type: string

  DeviceAddress:
    type: object
    properties:
      deviceId:
        required: true
        type: uuid
      encryptionCertificate:
        required: false
        type: certificate
      signatureCertificate:
        required: false
        type: certificate
      securityFingerprint:
        required: false
        type: binary

  LookupActiveDevicesResponse:
    type: object
    properties:
      certificateAuthorityChain:
        required: true
        type: array
        items:
          type: binary
      devices:
        required: true
        type: array
        items:
          type: DeviceAddress


/active-aliases:
  (sunday.group): device
  get:
    displayName: listActiveAliases
    description: Lists active aliases for device
    responses:
      200:
        description: Active aliases listed successfully
        body:
          type: array
          items:
            type: string
  post:
    displayName: addActiveAlias
    description: Adds an active alias to the device
    body:
      type: AddActiveAliasParams
    responses:
      201:
        description: Alias added to device successfully
        body:
          type: string
      400:
        description: Alias is invalid or not registered on account
  /{alias}:
    uriParameters:
      alias:
        required: true
        type: string
    delete:
      displayName: removeActiveAlias
      description: Removes an active alias from the device
      responses:
        204:
          description: Alias removed successfully
        404:
          description: Alias not found
/active-push-services:
  (sunday.group): device
  get:
    displayName: listActivePushServices
    description: Lists active push services
    responses:
      200:
        description: List of active push services fetched successfully
        body:
          type: array
          items:
            type: DevicePushService
  /{priority}:
    uriParameters:
      priority:
        required: true
        type: string
        description: >-
          Priority of push service to target. Using the priority '*' denotes the "default" priority which
          will be used when a more specific priority is not enabled
    put:
      displayName: updateActivePushService
      description: Updates the details of the active push service for the specified priority
      body:
        type: UpdateActivePushServiceParams
      responses:
        204:
          description: Push service details were updated successfully
        400:
          description: Push service details were invalid
    get:
      displayName: fetchActivePushService
      description: Fetches details of the active push service for the specified priority
      responses:
        200:
          description: Active push service details
          body:
            type: DevicePushService
    delete:
      displayName: removeActivePushService
      description: Removes an active push service for the specified priority
      responses:
        204:
          description: Active push service removed successfully
        404:
          description: Active push service not found
/certificates:
  (sunday.group): device
  put:
    displayName: updateCertificates
    description: Update certificates for the device
    body:
      type: UpdateDeviceCertificatesParams
    responses:
      204:
        description: Device certificates updated successfully
      400:
        description: Encryption or signature certificate is invalid
      404:
        description: Device not found
/messages:
  (sunday.group): device
  get:
    displayName: listMessages
    description: List queued messages for device
    queryParameters:
      filter:
        required: false
        type: string
      limit:
        required: false
        default: 51200
        type: integer
        format: int32
    responses:
      200:
        description: Message
        body:
          displayName: Messages queuing
          description: successful operation
          type: array
          items:
            type: MessageSummary
  post:
    displayName: sendMessage
    description: Send message
    body:
      displayName: body
      type: MessageSendParams
    responses:
      201:
        description: successful operation
        body:
          description: successful operation
          type: MessageSendResult
  /{messageId}:
    uriParameters:
      messageId:
        required: true
        displayName: messageId
        type: uuid
    get:
      displayName: fetchMessage
      description: Fetch message details
      queryParameters:
        filter:
          required: false
          displayName: filter
          type: string
      responses:
        200:
          description: successful operation
          body:
            description: successful operation
            type: MessageSummary
    /payloads/{payloadId}:
      uriParameters:
        payloadId:
          required: true
          displayName: payloadId
          type: string
      get:
        displayName: downloadPayload
        description: Download payload
        queryParameters:
          expiresIn:
            required: false
            default: 1200
            displayName: expiresIn
            type: integer
            format: int32
        responses:
          200:
            description: successful operation
            body:
              application/octet-stream:
                description: successful operation
                type: string
    delete:
      displayName: ackMessage
      description: Acknowledge message
      responses:
        204:
          description: successful operation
        404:
          description: Message not found
/events:
  (sunday.group): device
  get:
    displayName: events
    description: Device event stream (Server-Sent-Events)
    responses:
      200:
        description: successful operation
        body:
          text/event-stream:
            description: successful operation


/aliases:
  (sunday.group): account
  get:
    displayName: listAliases
    description: Lists aliases for account
    responses:
      200:
        description: successful operation
        body:
          type: array
          items:
            type: string
  post:
    displayName: addAlias
    description: Adds an alias to the account
    body:
      application/json:
        type: AddAliasParams
    responses:
      201:
        description: successful operation
        body:
          type: string
      400:
        description: An invalid alias was provided
  /{alias}:
    uriParameters:
      alias:
        required: true
        type: string
    delete:
      displayName: removeAlias
      description: Removes an alias from the account
      responses:
        204:
          description: Alias was removed sucessfully
        404:
          description: Alias was not found

/devices:
  (sunday.group): account
  get:
    displayName: listDevices
    description: Lists devices for account
    responses:
      200:
        description: successful operation
        body:
          description: successful operation
          type: array
          items:
            type: Device
  post:
    displayName: createDevice
    description: Create device for account
    body:
      displayName: body
      type: DeviceCreateParams
    responses:
      201:
        description: Device created successfully
        body:
          description: Device created successfully
          type: Device
      400:
        description: Device parameters invalid
  /{deviceId}:
    uriParameters:
      deviceId:
        required: true
        displayName: deviceId
        type: uuid
    get:
      displayName: fetchDevice
      description: Fetch device for account
      responses:
        200:
          description: Device returned successfully
          body:
            description: Device returned successfully
            type: Device
        404:
          description: Device not found
    delete:
      displayName: deleteDevice
      description: Delete device from account
      responses:
        204:
          description: Device deleted successfully
        404:
          description: Device not found
    /active-aliases:
      get:
        displayName: listActiveAliases
        description: Lists active aliases for device
        responses:
          200:
            description: Active aliases listed successfully
            body:
              type: array
              items:
                type: string
      post:
        displayName: addActiveAlias
        description: Adds an active alias to the device
        body:
          type: AddActiveAliasParams
        responses:
          201:
            description: Alias added to device successfully
            body:
              type: string
          400:
            description: Alias is invalid or not registered on account
      /{alias}:
        uriParameters:
          alias:
            required: true
            type: string
        delete:
          displayName: removeActiveAlias
          description: Removes an active alias from the device
          responses:
            204:
              description: Alias removed successfully
            404:
              description: Alias not found
    /active-push-services:
      get:
        displayName: listActivePushServices
        description: Lists active push services
        responses:
          200:
            description: List of active push services fetched successfully
            body:
              type: array
              items:
                type: DevicePushService
      /{priority}:
        uriParameters:
          priority:
            required: true
            type: string
            description: >-
              Priority of push service to target. Using the priority '*' denotes the "default" priority which
              will be used when a more specific priority is not enabled
        put:
          displayName: updateActivePushService
          description: Updates the details of the active push service for the specified priority
          body:
            type: UpdateActivePushServiceParams
          responses:
            200:
              description: Push service details were updated successfully
              body:
                type: DevicePushService
            400:
              description: Push service details were invalid
        get:
          displayName: fetchActivePushService
          description: Fetches details of the active push service for the specified priority
          responses:
            200:
              description: Active push service details
              body:
                type: DevicePushService
        delete:
          displayName: removeActivePushService
          description: Removes an active push service for the specified priority
          responses:
            204:
              description: Active push service removed successfully
            404:
              description: Active push service not found
    /certificates:
      put:
        displayName: updateCertificates
        description: Update certificates for the device
        body:
          type: UpdateDeviceCertificatesParams
        responses:
          204:
            description: Device certificates updated successfully
          400:
            description: Encryption or signature certificate is invalid
          404:
            description: Device not found
/directory:
  (sunday.group): account
  get:
    displayName: lookupActiveDevices
    description: Lookup active devices for aliases
    queryParameters:
      alias:
        required: false
        displayName: alias
        type: string
    responses:
      200:
        description: Active devices fetched successfully
        body:
          type: LookupActiveDevicesResponse
      404:
        description: Alias not found


/keys:
  (sunday.group): tenant
  get:
    displayName: listTenantAuthKeys
    description: List authorization keys for tenant
    responses:
      200:
        description: successful operation
        body:
          type: array
          items:
            type: AuthKey
  post:
    displayName: addTenantAuthKey
    description: Create authorization key for tenant
    body:
      displayName: body
      type: AuthKeyCreateParams
    responses:
      201:
        description: Authorization key created successfully
        body:
          type: AuthKey
      400:
        description: Authorization key parameters invalid
  /{keyId}:
    uriParameters:
      keyId:
        required: true
        displayName: keyId
        type: string
    get:
      displayName: fetchTenantAuthKey
      description: Fetch authorization key for tenant
      responses:
        200:
          description: successful operation
          body:
            description: successful operation
            type: AuthKey
    delete:
      displayName: deleteTenantAuthKey
      description: Delete authorization key from tenant
      responses:
        204:
          description: Authorization key deleted succcessfully
        404:
          description: Authorization key not found
/users:
  (sunday.group): tenant
  get:
    displayName: listTenantUsers
    description: List system users for tenant
    responses:
      200:
        description: successful operation
        body:
          type: array
          items:
            type: SystemUser
  post:
    displayName: createTenantUser
    description: Create system user for tenant
    body:
      displayName: body
      type: SystemUserCreateParams
    responses:
      201:
        description: System user created successfully
        body:
          type: SystemUser
      400:
        description: System user name already in use or password invalid
  /{userId}:
    uriParameters:
      userId:
        required: true
        displayName: userId
        type: uuid
    get:
      displayName: fetchTenantUser
      description: Fetch system user for tenant
      responses:
        200:
          description: successful operation
          body:
            type: SystemUser
    delete:
      displayName: deleteTenantUser
      description: Delete system user from tenant
      responses:
        204:
          description: System user deleted successfully
        404:
          description: System user not found
/push-services:
  (sunday.group): tenant
  get:
    displayName: listTentantPushServices
    description: List push service configurations for tenant
    responses:
      200:
        description: successful operation
        body:
          type: array
          items:
            type: TenantPushService
  post:
    displayName: createTentantPushService
    description: Create a push service configuration for tenant
    body:
      displayName: body
      type: TenantPushServiceParams
    responses:
      201:
        description: Tenant push service added successfully
        body:
          type: TenantPushService
      400:
        description: Tenant push service parameters invalid
  /{type}:
    uriParameters:
      type:
        required: true
        displayName: type
        type: PushServiceType
    get:
      displayName: fetchTentantPushService
      description: Fetch push service configuration for tenant
      responses:
        200:
          description: successful operation
          body:
            type: TenantPushService
    delete:
      displayName: deleteTenantPushService
      description: Delete push service configuration from tenant
      responses:
        204:
          description: Tenant push service configuration deleted
        404:
          description: Tenant push service not found
/accounts:
  (sunday.group): tenant
  get:
    displayName: listAccounts
    description: List accounts
    responses:
      200:
        description: successful operation
        body:
          type: array
          items:
            type: Account
  post:
    displayName: createAccount
    description: Create account for tenant
    body:
      displayName: body
      type: AccountCreateParams
    responses:
      201:
        description: Account added successfully
        body:
          type: Account
      400:
        description: Account parameters invalid
  /{accountId}:
    uriParameters:
      accountId:
        required: true
        displayName: accountId
        type: uuid
    get:
      displayName: fetchAccount
      description: Fetch account
      responses:
        200:
          description: successful operation
          body:
            type: Account
    delete:
      displayName: deleteAccount
      description: Delete account from tenant
      responses:
        204:
          description: Account deleted successfully
        404:
          description: Account not found
    /aliases:
      get:
        displayName: listAliases
        description: Lists aliases for account
        responses:
          200:
            description: successful operation
            body:
              type: array
              items:
                type: string
      post:
        displayName: addAlias
        description: Adds an alias to the account
        body:
          type: AddAliasParams
        responses:
          201:
            description: successful operation
            body:
              type: string
          400:
            description: An invalid alias was provided
      /{alias}:
        uriParameters:
          alias:
            required: true
            type: string
        delete:
          displayName: removeAlias
          description: Removes an alias from the account
          responses:
            204:
              description: Alias was removed sucessfully
            404:
              description: Alias was not found

    /devices:
      get:
        displayName: listDevices
        description: Lists devices for account
        responses:
          200:
            description: successful operation
            body:
              description: successful operation
              type: array
              items:
                type: Device
      post:
        displayName: createDevice
        description: Create device for account
        body:
          displayName: body
          type: DeviceCreateParams
        responses:
          201:
            description: Device created successfully
            body:
              description: Device created successfully
              type: Device
          400:
            description: Device parameters invalid
      /{deviceId}:
        uriParameters:
          deviceId:
            required: true
            displayName: deviceId
            type: uuid
        get:
          displayName: fetchDevice
          description: Fetch device for account
          responses:
            200:
              description: Device returned successfully
              body:
                description: Device returned successfully
                type: Device
            404:
              description: Device not found
        delete:
          displayName: deleteDevice
          description: Delete device from account
          responses:
            204:
              description: Device deleted successfully
            404:
              description: Device not found
        /active-aliases:
          get:
            displayName: listActiveAliases
            description: Lists active aliases for device
            responses:
              200:
                description: Active aliases listed successfully
                body:
                  type: array
                  items:
                    type: string
          post:
            displayName: addActiveAlias
            description: Adds an active alias to the device
            body:
              type: AddActiveAliasParams
            responses:
              201:
                description: Alias added to device successfully
                body:
                  type: string
              400:
                description: Alias is invalid or not registered on account
          /{alias}:
            uriParameters:
              alias:
                required: true
                type: string
            delete:
              displayName: removeActiveAlias
              description: Removes an active alias from the device
              responses:
                204:
                  description: Alias removed successfully
                404:
                  description: Alias not found
        /active-push-services:
          get:
            displayName: listActivePushServices
            description: Lists active push services
            responses:
              200:
                description: List of active push services fetched successfully
                body:
                  type: array
                  items:
                    type: DevicePushService
          /{priority}:
            uriParameters:
              priority:
                required: true
                type: string
                description: >-
                  Priority of push service to target. Using the priority '*' denotes the "default" priority which
                  will be used when a more specific priority is not enabled
            put:
              displayName: updateActivePushService
              description: Updates the details of the active push service for the specified priority
              body:
                type: UpdateActivePushServiceParams
              responses:
                200:
                  description: Push service details were updated successfully
                  body:
                    type: DevicePushService
                400:
                  description: Push service details were invalid
            get:
              displayName: fetchActivePushService
              description: Fetches details of the active push service for the specified priority
              responses:
                200:
                  description: Active push service details
                  body:
                    type: DevicePushService
            delete:
              displayName: removeActivePushService
              description: Removes an active push service for the specified priority
              responses:
                204:
                  description: Active push service removed successfully
                404:
                  description: Active push service not found
        /certificates:
          put:
            displayName: updateCertificates
            description: Update certificates for the device
            body:
              type: UpdateDeviceCertificatesParams
            responses:
              204:
                description: Device certificates updated successfully
              400:
                description: Encryption or signature certificate is invalid
              404:
                description: Device not found


/tenants:
  (sunday.group): admin
  get:
    displayName: listTenants
    description: List tenants
    responses:
      200:
        description: successful operation
        body:
          type: array
          items:
            type: Tenant
  post:
    displayName: createTenant
    description: Create tenant
    body:
      displayName: body
      type: TenantCreateParams
    responses:
      201:
        description: Tenant created successfully
        body:
          type: Tenant
      400:
        description: Tenant parameters invalid
  /{tenantId}:
    uriParameters:
      tenantId:
        required: true
        displayName: tenantId
        type: uuid
    get:
      displayName: fetchTenant
      description: Fetch tenant
      responses:
        200:
          description: successful operation
          body:
            type: Tenant
    delete:
      displayName: deleteTenant
      description: Delete tenant
      responses:
        204:
          description: Tenant deleted successfully
        404:
          description: Tenant not found
    /keys:
      get:
        displayName: listTenantAuthKeys
        description: List authorization keys for tenant
        responses:
          200:
            description: successful operation
            body:
              type: array
              items:
                type: AuthKey
      post:
        displayName: addTenantAuthKey
        description: Create authorization key for tenant
        body:
          displayName: body
          type: AuthKeyCreateParams
        responses:
          201:
            description: Authorization key created successfully
            body:
              type: AuthKey
          400:
            description: Authorization key parameters invalid
      /{keyId}:
        uriParameters:
          keyId:
            required: true
            displayName: keyId
            type: string
        get:
          displayName: fetchTenantAuthKey
          description: Fetch authorization key for tenant
          responses:
            200:
              description: successful operation
              body:
                description: successful operation
                type: AuthKey
        delete:
          displayName: deleteTenantAuthKey
          description: Delete authorization key from tenant
          responses:
            204:
              description: Authorization key deleted succcessfully
            404:
              description: Authorization key not found
    /users:
      get:
        displayName: listTenantUsers
        description: List system users for tenant
        responses:
          200:
            description: successful operation
            body:
              type: array
              items:
                type: SystemUser
      post:
        displayName: createTenantUser
        description: Create system user for tenant
        body:
          displayName: body
          type: SystemUserCreateParams
        responses:
          201:
            description: System user created successfully
            body:
              type: SystemUser
          400:
            description: System user name already in use or password invalid
      /{userId}:
        uriParameters:
          userId:
            required: true
            displayName: userId
            type: uuid
        get:
          displayName: fetchTenantUser
          description: Fetch system user for tenant
          responses:
            200:
              description: successful operation
              body:
                type: SystemUser
        delete:
          displayName: deleteTenantUser
          description: Delete system user from tenant
          responses:
            204:
              description: System user deleted successfully
            404:
              description: System user not found
    /push-services:
      get:
        displayName: listTentantPushServices
        description: List push service configurations for tenant
        responses:
          200:
            description: successful operation
            body:
              type: array
              items:
                type: TenantPushService
      post:
        displayName: createTentantPushService
        description: Create a push service configuration for tenant
        body:
          displayName: body
          type: TenantPushServiceParams
        responses:
          201:
            description: Tenant push service added successfully
            body:
              type: TenantPushService
          400:
            description: Tenant push service parameters invalid
      /{type}:
        uriParameters:
          type:
            required: true
            displayName: type
            type: PushServiceType
        get:
          displayName: fetchTentantPushService
          description: Fetch push service configuration for tenant
          responses:
            200:
              description: successful operation
              body:
                type: TenantPushService
        delete:
          displayName: deleteTenantPushService
          description: Delete push service configuration from tenant
          responses:
            204:
              description: Tenant push service configuration deleted
            404:
              description: Tenant push service not found
    /accounts:
      get:
        displayName: listAccounts
        description: List accounts
        responses:
          200:
            description: successful operation
            body:
              type: array
              items:
                type: Account
      post:
        displayName: createAccount
        description: Create account for tenant
        body:
          displayName: body
          type: AccountCreateParams
        responses:
          201:
            description: Account added successfully
            body:
              type: Account
          400:
            description: Account parameters invalid
      /{accountId}:
        uriParameters:
          accountId:
            required: true
            displayName: accountId
            type: uuid
        get:
          displayName: fetchAccount
          description: Fetch account
          responses:
            200:
              description: successful operation
              body:
                type: Account
        delete:
          displayName: deleteAccount
          description: Delete account from tenant
          responses:
            204:
              description: Account deleted successfully
            404:
              description: Account not found
        /aliases:
          get:
            displayName: listAliases
            description: Lists aliases for account
            responses:
              200:
                description: successful operation
                body:
                  type: array
                  items:
                    type: string
          post:
            displayName: addAlias
            description: Adds an alias to the account
            body:
              type: AddAliasParams
            responses:
              201:
                description: successful operation
                body:
                  type: string
              400:
                description: An invalid alias was provided
          /{alias}:
            uriParameters:
              alias:
                required: true
                type: string
            delete:
              displayName: removeAlias
              description: Removes an alias from the account
              responses:
                204:
                  description: Alias was removed sucessfully
                404:
                  description: Alias was not found

        /devices:
          get:
            displayName: listDevices
            description: Lists devices for account
            responses:
              200:
                description: successful operation
                body:
                  description: successful operation
                  type: array
                  items:
                    type: Device
          post:
            displayName: createDevice
            description: Create device for account
            body:
              displayName: body
              type: DeviceCreateParams
            responses:
              201:
                description: Device created successfully
                body:
                  description: Device created successfully
                  type: Device
              400:
                description: Device parameters invalid
          /{deviceId}:
            uriParameters:
              deviceId:
                required: true
                displayName: deviceId
                type: uuid
            get:
              displayName: fetchDevice
              description: Fetch device for account
              responses:
                200:
                  description: Device returned successfully
                  body:
                    description: Device returned successfully
                    type: Device
                404:
                  description: Device not found
            delete:
              displayName: deleteDevice
              description: Delete device from account
              responses:
                204:
                  description: Device deleted successfully
                404:
                  description: Device not found
            /active-aliases:
              get:
                displayName: listActiveAliases
                description: Lists active aliases for device
                responses:
                  200:
                    description: Active aliases listed successfully
                    body:
                      type: array
                      items:
                        type: string
              post:
                displayName: addActiveAlias
                description: Adds an active alias to the device
                body:
                  type: AddActiveAliasParams
                responses:
                  201:
                    description: Alias added to device successfully
                    body:
                      type: string
                  400:
                    description: Alias is invalid or not registered on account
              /{alias}:
                uriParameters:
                  alias:
                    required: true
                    type: string
                delete:
                  displayName: removeActiveAlias
                  description: Removes an active alias from the device
                  responses:
                    204:
                      description: Alias removed successfully
                    404:
                      description: Alias not found
            /active-push-services:
              get:
                displayName: listActivePushServices
                description: Lists active push services
                responses:
                  200:
                    description: List of active push services fetched successfully
                    body:
                      type: array
                      items:
                        type: DevicePushService
              /{priority}:
                uriParameters:
                  priority:
                    required: true
                    type: string
                    description: >-
                      Priority of push service to target. Using the priority '*' denotes the "default" priority which
                      will be used when a more specific priority is not enabled
                put:
                  displayName: updateActivePushService
                  description: Updates the details of the active push service for the specified priority
                  body:
                    type: UpdateActivePushServiceParams
                  responses:
                    200:
                      description: Push service details were updated successfully
                      body:
                        type: DevicePushService
                    400:
                      description: Push service details were invalid
                get:
                  displayName: fetchActivePushService
                  description: Fetches details of the active push service for the specified priority
                  responses:
                    200:
                      description: Active push service details
                      body:
                        type: DevicePushService
                delete:
                  displayName: removeActivePushService
                  description: Removes an active push service for the specified priority
                  responses:
                    204:
                      description: Active push service removed successfully
                    404:
                      description: Active push service not found
            /certificates:
              put:
                displayName: updateCertificates
                description: Update certificates for the device
                body:
                  type: UpdateDeviceCertificatesParams
                responses:
                  204:
                    description: Device certificates updated successfully
                  400:
                    description: Encryption or signature certificate is invalid
                  404:
                    description: Device not found
/system-keys:
  (sunday.group): admin
  get:
    displayName: listAuthKeys
    description: List authorization keys for system
    responses:
      200:
        description: successful operation
        body:
          type: array
          items:
            type: AuthKey
  post:
    displayName: addAuthKey
    description: Create authorization key for system
    body:
      displayName: body
      type: AuthKeyCreateParams
    responses:
      201:
        description: Key created successfully
        body:
          type: AuthKey
      400:
        description: Authorization key parameters invalid
  /{keyId}:
    uriParameters:
      keyId:
        required: true
        displayName: keyId
        type: string
    get:
      displayName: fetchAuthKey
      description: Fetch authorization key for system
      responses:
        200:
          description: successful operation
          body:
            type: AuthKey
    delete:
      displayName: deleteAuthKey
      description: Delete authorization key for system
      responses:
        204:
          description: Authorization key deleted successfully
        404:
          description: Authorization key not found
/system-users:
  (sunday.group): admin
  get:
    displayName: listUsers
    description: List administrator users
    responses:
      200:
        description: successful operation
        body:
          description: successful operation
          type: array
          items:
            type: SystemUser
  post:
    displayName: addUser
    description: Add administrator user
    body:
      displayName: body
      type: SystemUserCreateParams
    responses:
      201:
        description: System user created successfully
        body:
          description: System user created successfully
          type: SystemUser
      400:
        description: System user name already in use or password invalid
  /{userId}:
    uriParameters:
      userId:
        required: true
        displayName: userId
        type: uuid
    get:
      displayName: fetchUser
      description: Fetch administrator user
      responses:
        200:
          description: successful operation
          body:
            description: successful operation
            type: SystemUser
    delete:
      displayName: deleteUser
      description: Delete administrator user
      responses:
        204:
          description: System user deleted successfully
        404:
          description: System user not found


/grant:
  (sunday.group): public
  /password:
    securedBy:
    post:
      displayName: passwordGrant
      description: Generate admin/tenant access token
      body:
        displayName: body
        type: PasswordParams
      responses:
        200:
          description: successful operation
          body:
            description: successful operation
            type: GrantResponse
  /refresh:
    securedBy:
    post:
      displayName: refreshGrant
      description: Refresh account access token
      body:
        displayName: body
        type: RefreshParams
      responses:
        200:
          description: successful operation
          body:
            description: successful operation
            type: GrantResponse
  /delegate:
    post:
      displayName: delegate
      description: Delegate permissions to account/device
      body:
        displayName: body
        type: DelegateParams
      responses:
        200:
          description: successful operation
          body:
            description: successful operation
            type: GrantResponse
  /test:
    post:
      displayName: testIt
