name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    types: [ opened, synchronize, reopened ]
    branches: [ main ]

jobs:

  check:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - name: Linting
      uses: burrunan/gradle-cache-action@v1
      with:
        job-id: jdk8-build-test
        arguments: lintKotlin licenseCheck

  build-test-tools:
    runs-on: ubuntu-latest

    needs: [check]

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-java@v1
      with:
        java-version: '17'

    - name: Build & Test
      uses: burrunan/gradle-cache-action@v1
      with:
        job-id: jdk8-build-test
        arguments: cleanTest :cli:test :gradle-plugin:test

    - name: Updload Reports
      uses: actions/upload-artifact@v2
      if: always()
      with:
        name: reports-tools
        path: "**/build/reports/"


  build-test-swift:
    runs-on: macos-11

    needs: [check]

    strategy:
      matrix:
        xcode: ["13.2"]

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-java@v1
      with:
        java-version: '17'

    - name: Select Xcode
      run: sudo xcode-select -s /Applications/Xcode_${{matrix.xcode}}.app/Contents/Developer

    - name: Test
      run: ./gradlew cleanTest :generator:test --tests "io.outfoxx.sunday.generator.swift.*"

    - name: Updload Reports
      uses: actions/upload-artifact@v2
      if: always()
      with:
        name: reports-swift
        path: "**/build/reports/"


  build-test-typescript:
    runs-on: ubuntu-latest

    needs: [check]

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-java@v1
      with:
        java-version: '17'

    - uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Test
      run: ./gradlew cleanTest :generator:test --tests "io.outfoxx.sunday.generator.typescript.*"

    - name: Updload Reports
      uses: actions/upload-artifact@v2
      if: always()
      with:
        name: reports-typescript
        path: "**/build/reports/"


  build-test-kotlin:
    runs-on: ubuntu-latest

    needs: [check]

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-java@v1
      with:
        java-version: '17'

    - name: Build & Test
      uses: burrunan/gradle-cache-action@v1
      with:
        job-id: jdk8-build-test
        arguments: cleanTest :generator:test --tests "io.outfoxx.sunday.generator.kotlin.*"

    - name: Updload Reports
      uses: actions/upload-artifact@v2
      if: always()
      with:
        name: reports-kotlin
        path: "**/build/reports/"


  publish:
    runs-on: ubuntu-latest

    needs: [check, build-test-tools, build-test-swift, build-test-kotlin, build-test-typescript]

    if: github.event.pull_request.merged || github.event_name == 'push'

    steps:
    - uses: actions/checkout@v2

    - name: Build Docs
      uses: burrunan/gradle-cache-action@v1
      with:
        job-id: jdk8-build-test
        arguments: build dokkaHtmlMultiModule -x test

    - name: Publish Maven (Snapshot)
      uses: burrunan/gradle-cache-action@v1
      with:
        job-id: jdk8-build-test
        arguments: publishAllPublicationsToMavenCentralRepository
        properties: |
          ossrhUsername=${{ secrets.OSSRH_USER }}
          ossrhPassword=${{ secrets.OSSRH_PASS }}

    - name: Publish Docker
      uses: burrunan/gradle-cache-action@v1
      with:
        job-id: jdk8-build-test
        arguments:  >-
          --continue
          -Djib.to.auth.username=${{ secrets.DOCKER_PUBLISH_USER }}
          -Djib.to.auth.password=${{ secrets.DOCKER_PUBLISH_TOKEN }}
          build
          jib
          -x test

    - name: Publish Documentation
      uses: JamesIves/github-pages-deploy-action@4.0.0
      with:
        branch: gh-pages
        clean: false
        folder: build/dokka/
